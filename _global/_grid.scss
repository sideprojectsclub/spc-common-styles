/*-------------*/
/* Grid System */
/*-------------*/

$columns_num: 12;
$miscellaneous_widths: (1point5: 1.5, 2point4: 2.4);

@mixin make_columns($size) {
    @for $i from 1 through $columns_num {
        .column.#{$size}-span#{$i} {
            @include flex-basis(100% / $columns_num * $i);
            width: 100% / $columns_num * $i;
        }
    }

    @for $i from 0 to $columns_num {
        .column {
            &.#{$size}-left#{$i} {
                margin-left: 100% / $columns_num * $i;
            }

            &.#{$size}-right#{$i} {
                margin-right: 100% / $columns_num * $i;
            }
        }
    }

    @each $name, $value in $miscellaneous_widths {
        .column {
            &.#{$size}-span#{$name} {
                @include flex-basis(100% / $columns_num * $value);
                width: 100% / $columns_num * $value;
            }
    
            &.#{$size}-left#{$name} {
                margin-left: 100% / $columns_num * $value;
            }
    
            &.#{$size}-right#{$name} {
                margin-right: 100% / $columns_num * $value;
            }
        }
    }
    
    .column {
        &.#{$size}-center {
            margin: 0 auto;
        }
        
        &.#{$size}-uncenter {
            margin: 0;
        }
    }
}

.row {
    @extend %page-max-width;
    @include display-flex;
    @include flex-wrap(wrap);
}

.column {
    @include flex(0 1 100%);
    min-width: 0;
}

.column-inner {
    position: relative;
    width: calc(100% - 2rem);
    margin: 0 5px;
    padding: 1rem;
    
    @include breakpoint($size-md) {
        width: calc(100% - #{$space-unit});
        margin: 0 ($space-unit / 2);
        padding: $space-unit / 2;
    }
}

@include make_columns(xs);

@include breakpoint($size-sm) {
    @include make_columns(sm);
}

@include breakpoint($size-md) {
    @include make_columns(md);
}

@include breakpoint($size-lg) {
    @include make_columns(lg);
}

@include breakpoint($size-xl) {
    @include make_columns(xl);
}